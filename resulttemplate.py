# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'resulttemplate.ui'
#
# Created by: PyQt5 UI code generator 5.15.9
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
from reportformat import Ui_reportForm
import sqlite3
import os
from editreporttemplate import Ui_editreportForm
from PyQt5.QtCore import QTime, QTimer

class Ui_resulttemplateForm(object):
    def setupUi(self, Form):
        Form.setObjectName("Form")
        Form.resize(811, 588)
        Form.setMaximumSize(QtCore.QSize(811, 16777215))
        font = QtGui.QFont()
        font.setPointSize(10)
        Form.setFont(font)
        Form.setStyleSheet("background-color: #ffffff;")
        self.label = QtWidgets.QLabel(Form)
        self.label.setEnabled(True)
        self.label.setGeometry(QtCore.QRect(20, 20, 211, 35))
        self.label.setMinimumSize(QtCore.QSize(5, 5))
        self.label.setMaximumSize(QtCore.QSize(16777215, 16777215))
        self.label.setSizeIncrement(QtCore.QSize(3, 3))
        font = QtGui.QFont()
        font.setPointSize(15)
        font.setBold(True)
        font.setWeight(75)
        self.label.setFont(font)
        self.label.setAutoFillBackground(False)
        self.label.setStyleSheet("color: #181C32;")
        self.label.setObjectName("label")
        self.lineEdit_18 = QtWidgets.QLineEdit(Form)
        self.lineEdit_18.setGeometry(QtCore.QRect(20, 120, 201, 31))
        font = QtGui.QFont()
        font.setPointSize(-1)
        font.setBold(False)
        font.setWeight(50)
        self.lineEdit_18.setFont(font)
        self.lineEdit_18.setStyleSheet("QLineEdit\n"
"{\n"
"font-size: 15px;\n"
"    font-weight: 400;\n"
"    color: #212529;\n"
"    background-color: #ffffff;\n"
"    background-clip: padding-box;\n"
"    border: 1px solid #ced4da;\n"
"    border-radius: 20px;\n"
"    padding:0px 10px;\n"
"}\n"
"QLineEdit:focus\n"
"{\n"
"border:1px solid #3F4254;\n"
"}\n"
"\n"
"")
        self.lineEdit_18.setInputMethodHints(QtCore.Qt.ImhNone)
        self.lineEdit_18.setFrame(True)
        self.lineEdit_18.setObjectName("lineEdit_18")
        self.label_2 = QtWidgets.QLabel(Form)
        self.label_2.setGeometry(QtCore.QRect(20, 100, 111, 16))
        font = QtGui.QFont()
        font.setFamily("Poppins")
        font.setPointSize(8)
        self.label_2.setFont(font)
        self.label_2.setStyleSheet("color: #5E6278;")
        self.label_2.setObjectName("label_2")
        self.label_3 = QtWidgets.QLabel(Form)
        self.label_3.setGeometry(QtCore.QRect(240, 100, 71, 16))
        font = QtGui.QFont()
        font.setFamily("Poppins")
        font.setPointSize(8)
        self.label_3.setFont(font)
        self.label_3.setStyleSheet("color: #5E6278;")
        self.label_3.setObjectName("label_3")
        self.label_13 = QtWidgets.QLabel(Form)
        self.label_13.setGeometry(QtCore.QRect(430, 240, 41, 16))
        self.label_13.setObjectName("label_13")
        self.pushButton = QtWidgets.QPushButton(Form)
        self.pushButton.setGeometry(QtCore.QRect(460, 120, 91, 31))
        font = QtGui.QFont()
        font.setPointSize(-1)
        font.setBold(True)
        font.setWeight(62)
        self.pushButton.setFont(font)
        self.pushButton.setStyleSheet("QPushButton\n"
"{\n"
"    background-color: #0DBCC0;\n"
"    border: 0;\n"
"    font-size: 14px;\n"
"    font-weight: 500;\n"
"    border-radius: 4px;\n"
"color: #ffffff;\n"
"border: 0;\n"
"}\n"
"\n"
"QPushButton:hover\n"
"{\n"
"background-color: #089598;\n"
"}\n"
"\n"
"")
        self.pushButton.setObjectName("pushButton")
        self.lineEdit_19 = QtWidgets.QLineEdit(Form)
        self.lineEdit_19.setGeometry(QtCore.QRect(240, 120, 201, 31))
        font = QtGui.QFont()
        font.setPointSize(-1)
        font.setBold(False)
        font.setWeight(50)
        self.lineEdit_19.setFont(font)
        self.lineEdit_19.setStyleSheet("QLineEdit\n"
"{\n"
"font-size: 15px;\n"
"    font-weight: 400;\n"
"    color: #212529;\n"
"    background-color: #ffffff;\n"
"    background-clip: padding-box;\n"
"    border: 1px solid #ced4da;\n"
"    border-radius: 20px;\n"
"    padding:0px 10px;\n"
"}\n"
"QLineEdit:focus\n"
"{\n"
"border:1px solid #3F4254;\n"
"}\n"
"\n"
"")
        self.lineEdit_19.setInputMethodHints(QtCore.Qt.ImhNone)
        self.lineEdit_19.setFrame(True)
        self.lineEdit_19.setObjectName("lineEdit_19")
        self.pushButton_2 = QtWidgets.QPushButton(Form)
        self.pushButton_2.setGeometry(QtCore.QRect(560, 120, 161, 31))
        
        font = QtGui.QFont()
        font.setPointSize(-1)
        font.setBold(True)
        font.setWeight(62)
        self.pushButton_2.setFont(font)
        self.pushButton_2.setStyleSheet("QPushButton\n"
"{\n"
"    background-color: #0DBCC0;\n"
"    border: 0;\n"
"    font-size: 14px;\n"
"    font-weight: 500;\n"
"    border-radius: 4px;\n"
"color: #ffffff;\n"
"border: 0;\n"
"}\n"
"\n"
"QPushButton:hover\n"
"{\n"
"background-color: #089598;\n"
"}\n"
"\n"
"")
        self.pushButton_2.setObjectName("pushButton_2")
        self.label_15 = QtWidgets.QLabel(Form)
        self.label_15.setGeometry(QtCore.QRect(30, 240, 101, 16))
        self.label_15.setObjectName("label_15")
        self.label_18 = QtWidgets.QLabel(Form)
        self.label_18.setGeometry(QtCore.QRect(175, 240, 131, 20))
        self.label_18.setObjectName("label_18")
       
        # self.line = QtWidgets.QFrame(Form)
        # self.line.setGeometry(QtCore.QRect(83, 280, 20, 371))
        # self.line.setFrameShape(QtWidgets.QFrame.VLine)
        # self.line.setFrameShadow(QtWidgets.QFrame.Sunken)
        # self.line.setObjectName("line")
        # self.line_2 = QtWidgets.QFrame(Form)
        # self.line_2.setGeometry(QtCore.QRect(323, 280, 20, 441))
        # self.line_2.setFrameShape(QtWidgets.QFrame.VLine)
        # self.line_2.setFrameShadow(QtWidgets.QFrame.Sunken)
        # self.line_2.setObjectName("line_2")
        
        self.listWidget = QtWidgets.QListWidget(Form)
        self.listWidget.setGeometry(QtCore.QRect(-27, 280, 921, 421))
        self.listWidget.setObjectName("listWidget")
         
        self.retranslateUi(Form)
        QtCore.QMetaObject.connectSlotsByName(Form)
        self.fetch_and_display_report_data()
        self.reporttemplate_data = {}
        
        self.timer = QTimer(Form)
        # Set the interval to 1000 milliseconds (1 second)
        self.timer.setInterval(1000)
        # Connect the timeout signal to the function you want to call
        self.timer.timeout.connect(self.fetch_and_display_report_data)
        # Start the timer
        self.timer.start()
    
    def fetch_and_display_report_data(self):
    
    # Connect to the database
     conn = sqlite3.connect('patient_data.db')
     cursor = conn.cursor()
 
     # Fetch reference data
     cursor.execute("SELECT * FROM reporttemplates")
     test_data = cursor.fetchall()
     self.listWidget.clear()
     if test_data:
         for row in test_data:
             item = QtWidgets.QListWidgetItem()
             self.listWidget.addItem(item)
     
             custom_widget = QtWidgets.QWidget()
             custom_layout = QtWidgets.QHBoxLayout(custom_widget)
             label = QtWidgets.QLabel(f"{row[0]:<10} {row[1]:<10} {row[2]:<10}  ")
             custom_layout.addWidget(label)
             font = QtGui.QFont("Poppins", 8)  # Replace "8" with the desired font size
             label.setFont(font)
             custom_layout.addWidget(label)
             button_layout = QtWidgets.QHBoxLayout()  # Create a layout for the buttons 
             
             delete_button = QtWidgets.QPushButton()
             delete_button.setIcon(QtGui.QIcon(os.path.join('images', 'delete.png')))
             delete_button.setFixedSize(20, 20)
             delete_button.clicked.connect(lambda _, row=row: self.delete_test(row[0])) 
             button_layout.addWidget(delete_button)
             
             edit_button = QtWidgets.QPushButton()
             edit_button.setIcon(QtGui.QIcon(os.path.join('images', 'edit.png')))  # Change to the correct icon
             edit_button.setFixedSize(20, 20)
             edit_button.clicked.connect(lambda _, row=row: self.edit_report(row[0]))
             button_layout.addWidget(edit_button)
             
             button_layout.addSpacing(90)
     
             custom_layout.addLayout(button_layout)  # Add the button layout to the custom layout
             item.setSizeHint(custom_widget.sizeHint())
             self.listWidget.setItemWidget(item, custom_widget)
             item.test_data = row
       
    def delete_test(self, code):
       # Connect to the database
       conn = sqlite3.connect('patient_data.db')
       cursor = conn.cursor()

       # Delete patient data from the database
       cursor.execute("DELETE FROM reporttemplates WHERE code = ?", (code,))
       conn.commit()

       # Refresh the displayed patient data immediately after deletion
       self.fetch_and_display_report_data()
    
    
    def edit_report(self, reporttemplate_code):
        self.timer.stop()
        self.edit_patient_form = QtWidgets.QWidget()
        self.ui_edit_patient = Ui_editreportForm()  # Replace with the correct class name
        self.ui_edit_patient.setupUi(self.edit_patient_form, reporttemplate_code)  # Pass the patient ID
        #self.edit_patient_form.show()
        # Fetch patient data for the specified patient_id
        reporttemplate_data = self.fetch_report_data_by_id(reporttemplate_code)
        if reporttemplate_data:
            self.ui_edit_patient.reporttemplate_data = reporttemplate_data  # Set the patient data in the edit form

        self.edit_patient_form.show()
        self.listWidget.clear()
        
        self.ui_edit_patient.pushButton_2.clicked.connect(self.fetch_and_display_report_data)
     
    def fetch_report_data_by_id(self, reporttemplate_code):
        # Connect to the database
        conn = sqlite3.connect('patient_data.db')
        cursor = conn.cursor()

        # Fetch patient data by ID
        cursor.execute("SELECT * FROM reporttemplates WHERE code = ?", (reporttemplate_code,))
        reporttemplate_data = cursor.fetchone()

        return reporttemplate_data    
           
    def retranslateUi(self, Form):
        _translate = QtCore.QCoreApplication.translate
        Form.setWindowTitle(_translate("Form", "Form"))
        self.label.setText(_translate("Form", "Result Template"))
        self.label_2.setText(_translate("Form", " Code"))
        self.label_3.setText(_translate("Form", "Name"))
        self.label_13.setText(_translate("Form", "Edit"))
        self.pushButton.setText(_translate("Form", "Search"))
        self.pushButton_2.setText(_translate("Form", "Add Result Template"))
        self.label_15.setText(_translate("Form", "Code"))
        self.label_18.setText(_translate("Form", "Name"))
        self.pushButton_2.clicked.connect(self.open_add_patient_form) 
    
    def open_add_patient_form(self):
        #self.timer.start()
        self.add_test_form = QtWidgets.QWidget()
        self.ui_add_test = Ui_reportForm()
        self.ui_add_test.setupUi(self.add_test_form)
        self.add_test_form.show()
        
        # self.fetch_and_display_patient_data()


if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    Form = QtWidgets.QWidget()
    ui = Ui_resulttemplateForm()
    ui.setupUi(Form)
    Form.show()
    sys.exit(app.exec_())
